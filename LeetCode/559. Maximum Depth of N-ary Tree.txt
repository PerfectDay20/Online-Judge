// Java
class Solution {
    public int maxDepth(Node root) {
        return root == null ? 0 : root.children.stream().map(this::maxDepth).reduce(0, Math::max) + 1;
    }
}

class Solution {
    public int maxDepth(Node root) {
        if (root == null) {
            return 0;
        } else {
            int max = 0;
            for (Node child : root.children) {
                max = Math.max(max, maxDepth(child));
            }
            return max + 1;
        }
    }
}

// Python
class Solution(object):
    def maxDepth(self, root):
        """
        :type root: Node
        :rtype: int
        """
        if not root:
            return 0
        elif not root.children:
            return 1
        else:
            return max(self.maxDepth(node) for node in root.children) + 1
