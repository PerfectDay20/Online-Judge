// Java
class Solution {
    public boolean judgeCircle(String moves) {
        int horizontal = 0;
        int vertical = 0;

        for (char c : moves.toCharArray()) {
            if (c == 'L') {
                horizontal--;
            } else if (c == 'R') {
                horizontal++;
            } else if (c == 'U') {
                vertical++;
            } else {
                vertical--;
            }
        }
        return horizontal == 0 && vertical == 0;
    }
}

// Scala
object Solution {
  def judgeCircle(moves: String): Boolean = {
    var (horizontal, vertical) = (0, 0)
    moves.foreach {
      case 'L' => horizontal -= 1
      case 'R' => horizontal += 1
      case 'U' => vertical += 1
      case 'D' => vertical -= 1
    }
    horizontal == 0 && vertical == 0
  }
}

// Python
class Solution:
    def judgeCircle(self, moves):
        """
        :type moves: str
        :rtype: bool
        """
        horizontal, vertical = 0, 0
        for c in moves:
            if c == 'L':
                horizontal -= 1
            elif c == 'R':
                horizontal += 1
            elif c == 'U':
                vertical += 1
            else:
                vertical -= 1
        return horizontal == 0 and vertical == 0
